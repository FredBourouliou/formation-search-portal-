name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  api-tests:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: rootpass
          MYSQL_DATABASE: emfor_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'
        extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, json, opcache, zip
        tools: composer:v2
        coverage: xdebug
    
    - name: Cache Composer packages
      uses: actions/cache@v3
      with:
        path: api/vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    
    - name: Install dependencies
      working-directory: ./api
      run: composer install --prefer-dist --no-progress --no-suggest
    
    - name: Create test database
      working-directory: ./api
      env:
        DATABASE_URL: mysql://root:rootpass@127.0.0.1:3306/emfor_test
      run: |
        php bin/console doctrine:database:create --env=test --if-not-exists
        php bin/console doctrine:migrations:migrate --env=test --no-interaction
        php bin/console doctrine:fixtures:load --env=test --no-interaction
    
    - name: Run tests
      working-directory: ./api
      env:
        DATABASE_URL: mysql://root:rootpass@127.0.0.1:3306/emfor_test
      run: php bin/phpunit

  frontend-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Type check
      working-directory: ./frontend
      run: npx tsc --noEmit
    
    - name: Build
      working-directory: ./frontend
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/dist

  docker-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build API Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./api
        push: false
        tags: emfor-api:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build Frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: false
        tags: emfor-frontend:test
        cache-from: type=gha
        cache-to: type=gha,mode=max